name: Deploy Gatsby site to Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: gatsby
      - name: Cache gatsby .cache and public folder, node_modules and playwright browsers
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .cache
            public
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: yarn
      - name: Install Playwright Browsers
        run: yarn playwright install
      - name: Build with Gatsby
        env:
          PREFIX_PATHS: "true"
          SITE_URL: ${{ vars.SITE_URL }}
        run: yarn build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - name: Restore Cache of gatsby .cache and public folder, node_modules and playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .cache
            public
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
      - name: Run Playwright Tests
        env:
          SITE_URL: ${{ vars.SITE_URL }}
        run: yarn test:ci
      - name: Upload Coverage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ./coverage

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  analyze:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      SITE_URL: ${{ vars.SITE_URL }}
      PSI_STRAT: ${{ vars.PSI_STRAT }}
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Run PSI-SVG
        run: |
          npx psi-svg $SITE_URL psi.svg --strategy=$PSI_STRAT

      - name: Upload PSI SVG
        uses: actions/upload-artifact@v4
        with:
          name: psi-svg
          path: ./psi.svg
